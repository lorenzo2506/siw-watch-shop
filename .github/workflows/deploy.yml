name: Deploy to EC2 with RDS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build with Maven
      run: |
        cd siw-watch_shop
        mvn clean package -DskipTests
        
    - name: Copy JAR to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        timeout: 180s
        source: "siw-watch_shop/target/siw-watch_shop-1.0.jar"
        target: "/home/ubuntu/"
    
    - name: Copy config file to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        timeout: 60s
        source: "siw-watch_shop/src/main/resources/application-prod.properties"
        target: "/home/ubuntu/"
        strip_components: 4

    - name: Copy images to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        timeout: 120s
        source: "siw-watch_shop/uploads/"
        target: "/home/ubuntu/siw-watch_shop/"

    - name: Deploy application
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        timeout: 180s
        script: |
          cd /home/ubuntu
          
          # Create uploads directory if it doesn't exist (nel posto giusto)
          mkdir -p siw-watch_shop/uploads/images
          
          # Stop current application
          echo "Stopping current application..."
          pkill -f "siw-watch_shop" || echo "No process to stop"
          sleep 5
          
          # Debug: Check what files we have
          echo "=== DEBUG: Checking files ==="
          ls -la siw-watch_shop/target/ || echo "Target directory doesn't exist"
          ls -la application-prod.properties || echo "No external application-prod.properties"
          ls -la siw-watch_shop/uploads/ || echo "No uploads directory yet"
          
          # Clean old files
          rm -f siw-watch_shop-*.jar.old
          if [ -f "siw-watch_shop/target/siw-watch_shop-1.0.jar" ]; then
            mv siw-watch_shop/target/siw-watch_shop-1.0.jar siw-watch_shop/target/siw-watch_shop-1.0.jar.old 2>/dev/null || true
          fi
          
          # Check if JAR exists
          if [ ! -f "siw-watch_shop/target/siw-watch_shop-1.0.jar" ]; then
            echo "ERROR: JAR file not found at siw-watch_shop/target/siw-watch_shop-1.0.jar"
            ls -la siw-watch_shop/target/
            exit 1
          fi
          
          # Start new application
          echo "Starting application with RDS database..."
          echo "Using command: java -jar siw-watch_shop/target/siw-watch_shop-1.0.jar --spring.config.location=./application-prod.properties"
          nohup java -jar siw-watch_shop/target/siw-watch_shop-1.0.jar --spring.config.location=./application-prod.properties > app.log 2>&1 &
          
          # Wait for startup
          echo "Waiting 15 seconds for startup..."
          sleep 15
          
          # Check if process started
          echo "=== DEBUG: Checking process ==="
          ps aux | grep siw-watch_shop | grep -v grep || echo "Process not found"
          
          # Verify startup
          if pgrep -f "siw-watch_shop" > /dev/null; then
            echo "Application started successfully"
            echo "PID: $(pgrep -f siw-watch_shop)"
            
            # Test if app is responding
            sleep 5
            if curl -f -s http://localhost:8080 > /dev/null; then
              echo "Application is responding to requests"
            else
              echo "Warning: Application may not be fully ready yet"
              echo "Checking logs..."
              tail -10 app.log
            fi
          else
            echo "Application failed to start"
            echo "Last 20 lines of log:"
            tail -20 app.log
            echo "=== Full log ==="
            cat app.log
            exit 1
          fi