spring.application.name=siw-product

# Database configuration for production - RDS
spring.jpa.database=POSTGRESQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.datasource.driver-class-name=org.postgresql.Driver
# RDS endpoint corretto con database postgres
spring.datasource.url=jdbc:postgresql://watch-shop-db.cv86gw4ukvsg.eu-north-1.rds.amazonaws.com:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=Alicandro.02
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Web server
server.port=8080
server.address=0.0.0.0

# Thymeleaf configurations
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8

spring.messages.basename=messages/messages
spring.messages.encoding=UTF-8

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=196245434866-gdamaeks8vpmhkm8qcpqrs6m0l03ikiu.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://ec2-16-171-19-199.eu-north-1.compute.amazonaws.com:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.provider=google

# Provider personalizzato per forzare OAuth2 standard
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?prompt=select_account
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# Upload configuration
app.image.upload.dir=uploads/images
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=25MB
spring.servlet.multipart.enabled=true

server.servlet.response.buffer-size=8KB
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.tracking-modes=cookie

spring.mvc.hiddenmethod.filter.enabled=true

# Static resources
spring.resources.static-locations=classpath:/static/,file:uploads/
spring.web.resources.static-locations=classpath:/static/,file:uploads/
# Production logging (meno verbose)
logging.level.org.springframework.security=INFO
logging.level.root=INFO